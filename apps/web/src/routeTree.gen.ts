/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PublicRouteImport } from './routes/_public'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as PublicIndexRouteImport } from './routes/_public/index'
import { Route as PublicRegisterRouteImport } from './routes/_public/register'
import { Route as AuthenticatedProfileRouteImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedJobsRouteImport } from './routes/_authenticated/jobs'
import { Route as AuthenticatedClientsRouteImport } from './routes/_authenticated/clients'
import { Route as AuthenticatedQuotationsIndexRouteImport } from './routes/_authenticated/quotations/index'
import { Route as AuthenticatedJobsIndexRouteImport } from './routes/_authenticated/jobs/index'
import { Route as AuthenticatedDashboardIndexRouteImport } from './routes/_authenticated/dashboard/index'
import { Route as AuthenticatedClientsIndexRouteImport } from './routes/_authenticated/clients/index'
import { Route as AuthenticatedJobsJobIdRouteImport } from './routes/_authenticated/jobs/$jobId'

const PublicRoute = PublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicIndexRoute = PublicIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicRoute,
} as any)
const PublicRegisterRoute = PublicRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => PublicRoute,
} as any)
const AuthenticatedProfileRoute = AuthenticatedProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedJobsRoute = AuthenticatedJobsRouteImport.update({
  id: '/jobs',
  path: '/jobs',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedClientsRoute = AuthenticatedClientsRouteImport.update({
  id: '/clients',
  path: '/clients',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedQuotationsIndexRoute =
  AuthenticatedQuotationsIndexRouteImport.update({
    id: '/quotations/',
    path: '/quotations/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedJobsIndexRoute = AuthenticatedJobsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedJobsRoute,
} as any)
const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexRouteImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedClientsIndexRoute =
  AuthenticatedClientsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedClientsRoute,
  } as any)
const AuthenticatedJobsJobIdRoute = AuthenticatedJobsJobIdRouteImport.update({
  id: '/$jobId',
  path: '/$jobId',
  getParentRoute: () => AuthenticatedJobsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/clients': typeof AuthenticatedClientsRouteWithChildren
  '/jobs': typeof AuthenticatedJobsRouteWithChildren
  '/profile': typeof AuthenticatedProfileRoute
  '/register': typeof PublicRegisterRoute
  '/': typeof PublicIndexRoute
  '/jobs/$jobId': typeof AuthenticatedJobsJobIdRoute
  '/clients/': typeof AuthenticatedClientsIndexRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/jobs/': typeof AuthenticatedJobsIndexRoute
  '/quotations': typeof AuthenticatedQuotationsIndexRoute
}
export interface FileRoutesByTo {
  '/profile': typeof AuthenticatedProfileRoute
  '/register': typeof PublicRegisterRoute
  '/': typeof PublicIndexRoute
  '/jobs/$jobId': typeof AuthenticatedJobsJobIdRoute
  '/clients': typeof AuthenticatedClientsIndexRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/jobs': typeof AuthenticatedJobsIndexRoute
  '/quotations': typeof AuthenticatedQuotationsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_public': typeof PublicRouteWithChildren
  '/_authenticated/clients': typeof AuthenticatedClientsRouteWithChildren
  '/_authenticated/jobs': typeof AuthenticatedJobsRouteWithChildren
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_public/register': typeof PublicRegisterRoute
  '/_public/': typeof PublicIndexRoute
  '/_authenticated/jobs/$jobId': typeof AuthenticatedJobsJobIdRoute
  '/_authenticated/clients/': typeof AuthenticatedClientsIndexRoute
  '/_authenticated/dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/_authenticated/jobs/': typeof AuthenticatedJobsIndexRoute
  '/_authenticated/quotations/': typeof AuthenticatedQuotationsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/clients'
    | '/jobs'
    | '/profile'
    | '/register'
    | '/'
    | '/jobs/$jobId'
    | '/clients/'
    | '/dashboard'
    | '/jobs/'
    | '/quotations'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/profile'
    | '/register'
    | '/'
    | '/jobs/$jobId'
    | '/clients'
    | '/dashboard'
    | '/jobs'
    | '/quotations'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_public'
    | '/_authenticated/clients'
    | '/_authenticated/jobs'
    | '/_authenticated/profile'
    | '/_public/register'
    | '/_public/'
    | '/_authenticated/jobs/$jobId'
    | '/_authenticated/clients/'
    | '/_authenticated/dashboard/'
    | '/_authenticated/jobs/'
    | '/_authenticated/quotations/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  PublicRoute: typeof PublicRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_public/register': {
      id: '/_public/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof PublicRegisterRouteImport
      parentRoute: typeof PublicRoute
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/jobs': {
      id: '/_authenticated/jobs'
      path: '/jobs'
      fullPath: '/jobs'
      preLoaderRoute: typeof AuthenticatedJobsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/clients': {
      id: '/_authenticated/clients'
      path: '/clients'
      fullPath: '/clients'
      preLoaderRoute: typeof AuthenticatedClientsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/quotations/': {
      id: '/_authenticated/quotations/'
      path: '/quotations'
      fullPath: '/quotations'
      preLoaderRoute: typeof AuthenticatedQuotationsIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/jobs/': {
      id: '/_authenticated/jobs/'
      path: '/'
      fullPath: '/jobs/'
      preLoaderRoute: typeof AuthenticatedJobsIndexRouteImport
      parentRoute: typeof AuthenticatedJobsRoute
    }
    '/_authenticated/dashboard/': {
      id: '/_authenticated/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/clients/': {
      id: '/_authenticated/clients/'
      path: '/'
      fullPath: '/clients/'
      preLoaderRoute: typeof AuthenticatedClientsIndexRouteImport
      parentRoute: typeof AuthenticatedClientsRoute
    }
    '/_authenticated/jobs/$jobId': {
      id: '/_authenticated/jobs/$jobId'
      path: '/$jobId'
      fullPath: '/jobs/$jobId'
      preLoaderRoute: typeof AuthenticatedJobsJobIdRouteImport
      parentRoute: typeof AuthenticatedJobsRoute
    }
  }
}

interface AuthenticatedClientsRouteChildren {
  AuthenticatedClientsIndexRoute: typeof AuthenticatedClientsIndexRoute
}

const AuthenticatedClientsRouteChildren: AuthenticatedClientsRouteChildren = {
  AuthenticatedClientsIndexRoute: AuthenticatedClientsIndexRoute,
}

const AuthenticatedClientsRouteWithChildren =
  AuthenticatedClientsRoute._addFileChildren(AuthenticatedClientsRouteChildren)

interface AuthenticatedJobsRouteChildren {
  AuthenticatedJobsJobIdRoute: typeof AuthenticatedJobsJobIdRoute
  AuthenticatedJobsIndexRoute: typeof AuthenticatedJobsIndexRoute
}

const AuthenticatedJobsRouteChildren: AuthenticatedJobsRouteChildren = {
  AuthenticatedJobsJobIdRoute: AuthenticatedJobsJobIdRoute,
  AuthenticatedJobsIndexRoute: AuthenticatedJobsIndexRoute,
}

const AuthenticatedJobsRouteWithChildren =
  AuthenticatedJobsRoute._addFileChildren(AuthenticatedJobsRouteChildren)

interface AuthenticatedRouteChildren {
  AuthenticatedClientsRoute: typeof AuthenticatedClientsRouteWithChildren
  AuthenticatedJobsRoute: typeof AuthenticatedJobsRouteWithChildren
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
  AuthenticatedDashboardIndexRoute: typeof AuthenticatedDashboardIndexRoute
  AuthenticatedQuotationsIndexRoute: typeof AuthenticatedQuotationsIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedClientsRoute: AuthenticatedClientsRouteWithChildren,
  AuthenticatedJobsRoute: AuthenticatedJobsRouteWithChildren,
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
  AuthenticatedDashboardIndexRoute: AuthenticatedDashboardIndexRoute,
  AuthenticatedQuotationsIndexRoute: AuthenticatedQuotationsIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface PublicRouteChildren {
  PublicRegisterRoute: typeof PublicRegisterRoute
  PublicIndexRoute: typeof PublicIndexRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicRegisterRoute: PublicRegisterRoute,
  PublicIndexRoute: PublicIndexRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  PublicRoute: PublicRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
