import { createFileRoute } from "@tanstack/react-router";
export declare const Route: import("@tanstack/router-core").Route<import("@tanstack/router-core").Route<import("@tanstack/router-core").Route<import("@tanstack/react-router").RootRoute<undefined, import("../../__root").RootRouterContext, import("@tanstack/router-core").AnyContext, import("@tanstack/router-core").AnyContext, {}, undefined, unknown, unknown>, "", "", "/_authenticated", "/_authenticated", undefined, import("@tanstack/router-core").ResolveParams<"">, import("@tanstack/router-core").AnyContext, import("@tanstack/router-core").AnyContext, ({ context }: import("@tanstack/router-core").BeforeLoadContextOptions<import("@tanstack/react-router").RootRoute<undefined, import("../../__root").RootRouterContext, import("@tanstack/router-core").AnyContext, import("@tanstack/router-core").AnyContext, {}, undefined, unknown, unknown>, undefined, import("@tanstack/router-core").ResolveParams<"">, import("@tanstack/router-core").AnyContext, import("@tanstack/router-core").AnyContext>) => Promise<void>, {}, () => Promise<void>, unknown, unknown>, "/jobs", "/jobs", "/_authenticated/jobs", "/_authenticated/jobs", undefined, import("@tanstack/router-core").ResolveParams<"/jobs">, import("@tanstack/router-core").AnyContext, import("@tanstack/router-core").AnyContext, import("@tanstack/router-core").AnyContext, {}, undefined, unknown, unknown>, "/$jobId", "/jobs/$jobId", "/_authenticated/jobs/$jobId", "/_authenticated/jobs/$jobId", undefined, import("@tanstack/router-core").ResolveParams<"/$jobId">, import("@tanstack/router-core").AnyContext, import("@tanstack/router-core").AnyContext, import("@tanstack/router-core").AnyContext, {}, ({ params: { jobId }, context }: import("@tanstack/router-core").LoaderFnContext<import("@tanstack/router-core").Route<import("@tanstack/router-core").Route<import("@tanstack/react-router").RootRoute<undefined, import("../../__root").RootRouterContext, import("@tanstack/router-core").AnyContext, import("@tanstack/router-core").AnyContext, {}, undefined, unknown, unknown>, "", "", "/_authenticated", "/_authenticated", undefined, import("@tanstack/router-core").ResolveParams<"">, import("@tanstack/router-core").AnyContext, import("@tanstack/router-core").AnyContext, ({ context }: import("@tanstack/router-core").BeforeLoadContextOptions<import("@tanstack/react-router").RootRoute<undefined, import("../../__root").RootRouterContext, import("@tanstack/router-core").AnyContext, import("@tanstack/router-core").AnyContext, {}, undefined, unknown, unknown>, undefined, import("@tanstack/router-core").ResolveParams<"">, import("@tanstack/router-core").AnyContext, import("@tanstack/router-core").AnyContext>) => Promise<void>, {}, () => Promise<void>, unknown, unknown>, "/jobs", "/jobs", "/_authenticated/jobs", "/_authenticated/jobs", undefined, import("@tanstack/router-core").ResolveParams<"/jobs">, import("@tanstack/router-core").AnyContext, import("@tanstack/router-core").AnyContext, import("@tanstack/router-core").AnyContext, {}, undefined, unknown, unknown>, "/_authenticated/jobs/$jobId", import("@tanstack/router-core").ResolveParams<"/$jobId">, {}, import("@tanstack/router-core").AnyContext, import("@tanstack/router-core").AnyContext, import("@tanstack/router-core").AnyContext>) => Promise<{
    title: string;
    id: string;
    status: "TO_BE_BUDGETED" | "PENDING" | "CANCELED" | "IN_PROGRESS" | "COMPLETED";
    companyId: string;
    createdAt: string;
    updatedAt: string;
    displayId: string;
    description: string;
    price: string;
    startDate: string;
    endDate: string;
    clientId: string;
    createdById: string;
}>, unknown, unknown>;
